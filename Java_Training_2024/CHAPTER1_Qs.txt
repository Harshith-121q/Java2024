STRINGS 
--------------------
Which of the following methods is used to find the length of a string in Java?
a) length()
b) size()
c) getLength()
d) length

What will be the output of the following code?

String str = "Hello";
System.out.println(str.concat(" World"));

a) Hello
b) World
c) Hello World
d) HelloWorld

How can you check if a string starts with a specific prefix in Java?
a) startsWith()
b) beginsWith()
c) hasPrefix()
d) prefixOf()

Which method would you use to convert a string to lowercase in Java?
a) toLower()
b) lowerCase()
c) toLowerCase()
d) convertToLower()

What is the result of the following code?


String str = "Java Programming";
System.out.println(str.substring(5, 11));

a) Progra
b) Program
c) Progr
d) ogram

Which method is used to replace all occurrences of a specified character in a string?
a) replace()
b) replaceAll()
c) substitute()
d) change()

What will be the output of the following code?
String str1 = "hello";
String str2 = "hello";
System.out.println(str1 == str2);

a) true
b) false
c) Compilation error
d) Runtime error

How do you split a string into an array of substrings based on a delimiter in Java?
a) split()
b) divide()
c) tokenize()
d) cut()

Which method is used to trim leading and trailing whitespace from a string?
a) trim()
b) strip()
c) clean()
d) removeSpaces()

What does the equalsIgnoreCase() method do?
a) Compares two strings for equality, ignoring case
b) Compares two strings for equality, considering case
c) Checks if one string is a substring of another, ignoring case
d) Converts a string to lowercase and compares it to another string

#########################
String Buffer
###########################
1. Which of the following statements about StringBuffer is true?

a) StringBuffer is immutable like String.

b) StringBuffer objects can be used in a multithreaded environment without synchronization.

c) The StringBuffer class has a method called reverse() to reverse the content.

d) StringBuffer does not provide any method to insert data into a specific position.

2. Which method of StringBuffer is used to remove characters from a specific range?

	a) delete()

	b) deleteCharAt()

	c) remove()

	d) truncate()


3. Given the following code snippet, what will be the output?

	StringBuffer sb = new StringBuffer("Hello");
	sb.append("World");
	sb.insert(5, " ");
	System.out.println(sb);

	a) Hello World

	b) HelloWorld

	c) Hello WorldWorld

	d) Hello W orld


4. What will be the result of calling toString() on a StringBuffer object?

	a) It will convert the StringBuffer to a String object.

	b) It will return the original StringBuffer object.

	c) It will delete the contents of the StringBuffer.

	d) It will convert the StringBuffer to a StringBuilder object.


5. What is the initial capacity of a StringBuffer object created with the no-argument constructor?

	a) 16 characters

	b) 32 characters

	c) 64 characters

	d) 0 characters



6. Which of the following operations will not throw an IndexOutOfBoundsException?

	a) sb.charAt(10) where sb has a length of 5.

	b) sb.delete(10, 20) where sb has a length of 15.

	c) sb.insert(10, "text") where sb has a length of 8.

	d) sb.setLength(20) where sb has a length of 5.



7. Which of the following StringBuffer methods modifies the buffer in place?

	a) substring()

	b) toString()

	c) append()

	d) charAt()


8. How can you convert a StringBuffer to a StringBuilder?

	a) By using the toStringBuilder() method.

	b) By calling new StringBuilder(sb.toString()).

	c) By invoking convertToBuilder().

	d) By using StringBuilder.valueOf(sb).


9. What does the method capacity() of StringBuffer return?

	a) The number of characters in the StringBuffer.

	b) The maximum number of characters that can be held before resizing.

	c) The number of characters that can be inserted without resizing.

	d) The total length of the string represented by the StringBuffer.


10.Given the following code, what will be the result after executing sb.replace(0, 5, "Hi")?

	StringBuffer sb = new StringBuffer("HelloWorld");

	a) HiWorld

	b) HiWorldWorld

	c) HelloHi

	d) HiWorldWorld


#############################
String Builder 
####################################
1.Which of the following methods is used to reverse the content of a StringBuilder object?

	a) reverse()

	b) invert()

	c) flip()

	d) reverseContent()

2.What will be the output of the following code?


	StringBuilder sb = new StringBuilder("Java");
	sb.append("Programming");
	sb.insert(4, " Language");
	System.out.println(sb);

	a) Java LanguageProgramming

	b) JavaLanguageProgramming

	c) Java ProgrammingLanguage

	d) Java Programming

3.Which of the following methods of StringBuilder can be used to remove a substring?

	a) remove()

	b) delete()

	c) erase()

	d) subtract()

4.What does the capacity() method of StringBuilder return?

	a) The number of characters currently in the StringBuilder.

	b) The initial size of the StringBuilder.

	c) The maximum number of characters the StringBuilder can hold without resizing.

	d) The total length of the StringBuilder content.

5.What will be the result of the following code snippet?


	StringBuilder sb = new StringBuilder("HelloWorld");
	sb.replace(0, 5, "Hi");
	System.out.println(sb);

	a) HiWorld

	b) HiHelloWorld

	c) HiWorldWorld

	d) HelloHiWorld

6.Which method in StringBuilder would you use to retrieve a substring?

	a) subSequence()

	b) substring()

	c) getSubstring()

	d) extract()

7.Given the following code, what will be the result of sb.capacity() 
if sb was initially created with new StringBuilder(10) 
and later had 15 characters added to it? ---> 22 

	a) 10

	b) 15

	c) 20

	d) 30

8.Which of the following statements is true about StringBuilder compared to StringBuffer?
    
	a) StringBuilder is synchronized, while StringBuffer is not.

	b) StringBuilder is not synchronized, while StringBuffer is synchronized.

	c) Both StringBuilder and StringBuffer are synchronized.

	d) StringBuilder cannot be used in multithreaded environments, but StringBuffer can.

9.How can you create a StringBuilder object initialized with a specific string?

	a) new StringBuilder("YourString")

	b) StringBuilder.create("YourString")

	c) StringBuilder.with("YourString")

	d) StringBuilder.initialize("YourString")

10.What will be the effect of calling setLength(5) on a StringBuilder object 
			with the content "HelloWorld"?

	a) The content will be truncated to "Hello".

	b) The content will be extended to "HelloWorld" with padding.

	c) The content will be reversed.

	d) The content will be cleared.
	

########################
INPUT In JAVA 
################################

1. Which class is commonly used for reading user input from the console in Java?

a) Scanner
b) InputStream
c) BufferedWriter
d) PrintWriter


2. How do you create an instance of the Scanner class to read input from the standard input stream?

a) Scanner sc = new Scanner();
b) Scanner sc = new Scanner(System.out);
c) Scanner sc = new Scanner(System.in);
d) Scanner sc = new Scanner(FileInputStream);


3. Which method of the Scanner class is used to read an integer input from the user?

a) nextInt()
b) readInt()
c) getInt()
d) readInteger()


4. How can you read a line of text from the user using the Scanner class?

a) scanner.readLine();
b) scanner.next();
c) scanner.nextLine();
d) scanner.read();


5. Which method of the BufferedReader class is used to read a line of text from the user?

a) read()
b) readLine()
c) nextLine()
d) inputLine()


6. To use the BufferedReader class for input, which other class needs to be used in conjunction for reading from the console?

a) PrintWriter
b) InputStreamReader
c) FileReader
d) StringReader


7. What is the correct way to read a double value using Scanner?

a) scanner.nextDouble();
b) scanner.readDouble();
c) scanner.getDouble();
d) scanner.readFloat();


8. Which exception might be thrown when using BufferedReader's readLine() method?

a) IOException
b) FileNotFoundException
c) NumberFormatException
d) EOFException


9. What is the output of the following code if the user inputs 5?

	Scanner sc = new Scanner(System.in);
	int num = sc.nextInt();
	System.out.println("Number is: " + num);

	a) Number is: 0
	b) Number is: 5
	c) Number is: 5.0
	d) Number is: 5.5


10. Which method of the Scanner class is used to read a boolean value from the user?

a) nextBoolean()
b) readBoolean()
c) getBoolean()
d) boolean()

##########################
OUTPUT IN JAVA 
#########################
1. Which class is commonly used for outputting data to the console in Java?

	a) PrintStream
	b) OutputStream
	c) PrintWriter
	d) System.out


2. Which method of the System.out object is used to print a string to the console?

	a) printString()
	b) println()
	c) write()
	d) display()


3. What is the output of the following code?

	System.out.print("Hello ");
	System.out.print("World!");

	a) Hello World!
	b) HelloWorld!
	c) Hello
	d) World!


4. Which method would you use to format output in Java?

	a) format()
	b) printf()
	c) printFormatted()
	d) display()


5. What is the correct way to print an integer and a string together using System.out.printf()?

	a) System.out.printf("%d %s", 10, "hello");
	b) System.out.printf("%s %d", 10, "hello");
	c) System.out.printf("%d %d", "hello", 10);
	d) System.out.printf("%s %s", 10, "hello");


6. Which class is used for writing formatted text to a file?

	a) PrintWriter
	b) FileWriter
	c) BufferedWriter
	d) FileOutputStream


7. What does the following code do?
	System.out.println("The result is: " + 45);

	a) Prints: The result is: 45
	b) Prints: The result is: 45.0
	c) Prints: The result is: 45 without a newline
	d) Prints: The result is 45

8. What is the output of the following code if number is 3?

	int number = 3;
	System.out.printf("Number: %d%n", number);

	a) Number: 3
	b) Number: 3 with a newline
	c) Number: 3%
	d) Number: 3%n


9. Which of the following methods is used to write a single character to the console?

	a) System.out.write()
	b) System.out.print()
	c) System.out.println()
	d) System.out.printf()



###########################
Arrays 
###########################
1. How do you declare a one-dimensional array of integers in Java?

	a) int arr[];
	b) int arr;
	c) int arr = new int[];
	d) int[] arr;


2. What is the default value of an element in a one-dimensional array of integers in Java?

	a) 0
	b) null
	c) -1
	d) 0.0


3. How do you initialize a one-dimensional array with the values {1, 2, 3, 4, 5} in Java?

	a) int[] arr = {1, 2, 3, 4, 5};
	b) int arr[] = new int[]{1, 2, 3, 4, 5};
	c) int arr[] = new int(5);
	d) Both a and b


4. What is the length of an array in Java?

	a) The number of elements it can hold
	b) The number of elements currently stored
	c) The maximum index of the array
	d) The total memory allocated to the array

	
5. Which method is used to get the length of a one-dimensional array?

	a) arr.size()
	b) arr.length()
	c) arr.getLength()
	d) arr.length


6. What will be the output of the following code?


	int[] arr = new int[3];
	arr[0] = 10;
	arr[1] = 20;
	System.out.println(arr[2]);

	a) 10
	b) 20
	c) 0
	d) null


7. How do you access the third element of a one-dimensional array arr?

	a) arr[2]
	b) arr[3]
	c) arr[1]
	d) arr[0]


8. What is the result of the following code?



	int[] arr = new int[5];
	arr[0] = 1;
	arr[1] = 2;
	arr[2] = 3;
	System.out.println(arr[1] + arr[2]);

	a) 5
	b) 6
	c) 3
	d) 2


9. What will happen if you try to access an index that is out of bounds in a one-dimensional array?

	a) The program will continue execution without any effect
	b) A NullPointerException will be thrown
	c) A ArrayIndexOutOfBoundsException will be thrown
	d) The value will be set to null


10. How do you create and initialize a one-dimensional array of size 4 with values 10, 20, 30, 40?

	a) int[] arr = {10, 20, 30, 40};
	b) int[] arr = new int[4]{10, 20, 30, 40};
	c) int arr[] = new int[]{10, 20, 30, 40};
	d) Both a and c


ND Arrays 
------------
1. How do you declare a two-dimensional array of integers in Java?

	a) int arr[][];
	b) int[] arr[];
	c) int[][] arr;
	d) Both a and c


2. Which of the following correctly initializes a 2D array with values { {1, 2}, {3, 4} }?

	a) int[][] arr = { {1, 2}, {3, 4} };
	b) int arr[][] = new int[][] { {1, 2}, {3, 4} };
	c) int arr[] = { {1, 2}, {3, 4} };
	d) Both a and b


3. What is the output of the following code?


	int[][] arr = new int[2][3];
	arr[0][0] = 1;
	arr[1][1] = 5;
	System.out.println(arr[0][0] + arr[1][1]);

	a) 6
	b) 5
	c) 1
	d) 0


4. What is the default value of an element in a 2D integer array?

	a) 0
	b) null
	c) -1
	d) 0.0


5. How do you access the element in the second row and third column of a 2D array arr?

	a) arr[2][3]
	b) arr[1][2]
	c) arr[3][2]
	d) arr[2][2]



6. What is the output of the following code?



	int[][] arr = new int[3][];
	arr[0] = new int[2];
	arr[1] = new int[3];
	arr[2] = new int[1];
	System.out.println(arr[1].length);

	a) 3
	b) 2
	c) 1
	d) 0


7. Given the following code, what will be the result?

	int[][] arr = { {1, 2}, {3, 4, 5} };
	System.out.println(arr[1][2]);

	a) 5
	b) 4
	c) 3
	d) 2



8. How can you determine the number of rows in a 2D array arr?

	a) arr.getRows()
	b) arr.length
	c) arr[0].length
	d) arr.size()


9. What will be the output of the following code?


	int[][] arr = new int[2][];
	arr[0] = new int[3];
	arr[1] = new int[2];
	System.out.println(arr[0][0] + arr[1][1]);

	a) 0
	b) 1
	c) 2
	d) 3



10. Which statement about Java multidimensional arrays is correct?

	a) All rows in a 2D array must have the same number of columns.
	b) A 2D array in Java is essentially an array of arrays.
	c) The size of each row in a 2D array must be specified at the time of array creation.
	d) A 2D array cannot have rows with varying lengths.





FOR LOOP
--------------------
1. What is the output of the following code?

java

int[] arr = {1, 2, 3, 4, 5};
int sum = 0;
for (int i = 0; i < arr.length; i++) {
    sum += arr[i] * (i + 1);
}
System.out.println(sum);

a) 35
b) 40
c) 55
d) 60

Answer: a) 35
Explanation: sum is calculated as (1*1) + (2*2) + (3*3) + (4*4) + (5*5) = 1 + 4 + 9 + 16 + 25 = 55.
2. Consider the following code snippet. What will be the value of arr[2] after execution?

java

int[] arr = {1, 2, 3, 4, 5};
arr[2] = arr[2] * arr[1] / arr[3];

a) 1
b) 2
c) 3
d) 4

Answer: a) 1
Explanation: arr[2] = 3 * 2 / 4 = 6 / 4 = 1 (integer division).
3. What is the result of this code?

java

int[] arr = new int[5];
arr[0] = 1;
arr[1] = 2;
arr[2] = 3;
arr[3] = 4;
arr[4] = 5;
for (int i = 0; i < arr.length; i += 2) {
    System.out.print(arr[i] + " ");
}

a) 1 2 3 4 5
b) 1 3 5
c) 2 4
d) 1 3

Answer: b) 1 3 5
Explanation: The loop increments by 2, so it prints elements at indices 0, 2, and 4.
4. What is the output of the following code?

java

int[] arr1 = {1, 2, 3};
int[] arr2 = {1, 2, 3};
System.out.println(arr1 == arr2);

a) true
b) false
c) 1
d) 2

Answer: b) false
Explanation: arr1 and arr2 are two different objects, so == checks for reference equality, not content equality.
5. What is the output of this code?

java

int[] arr = new int[3];
arr[0] = 1;
arr[1] = 1;
arr[2] = 1;
for (int i = 0; i < arr.length; i++) {
    arr[i] = arr[i] + (i * arr[i]);
}
System.out.println(arr[1]);

a) 1
b) 2
c) 3
d) 4

Answer: d) 4
Explanation: After the loop, arr[1] = 1 + (1 * 1) = 2.
6. Given the array int[] arr = {3, 6, 9};, what is the result of the following code?

java

int[] reversed = new int[arr.length];
for (int i = 0; i < arr.length; i++) {
    reversed[i] = arr[arr.length - i - 1];
}
System.out.println(Arrays.toString(reversed));

a) [3, 6, 9]
b) [9, 6, 3]
c) [3, 9, 6]
d) [6, 9, 3]

Answer: b) [9, 6, 3]
Explanation: The code reverses the array.
7. Consider the following code. What will be printed?

java

int[] arr = {1, 2, 3, 4, 5};
int result = 0;
for (int i = 0; i < arr.length; i++) {
    result += arr[i] % 2 == 0 ? arr[i] : -arr[i];
}
System.out.println(result);

a) -9
b) -6
c) -2
d) 0

Answer: a) -9
Explanation: Only even numbers are added positively, and odd numbers are subtracted.
8. What will be the output of the following code?

java

int[] arr = new int[10];
for (int i = 0; i < arr.length; i++) {
    arr[i] = i * i;
}
System.out.println(Arrays.stream(arr).sum());

a) 0
b) 285
c) 100
d) 200

Answer: b) 285
Explanation: The sum of squares of integers from 0 to 9 is 0 + 1 + 4 + 9 + 16 + 25 + 36 + 49 + 64 + 81 = 285.
9. What is the output of the following code?

java

int[] arr = new int[5];
for (int i = 0; i < arr.length; i++) {
    arr[i] = (i % 2 == 0) ? i : i * 2;
}
System.out.println(Arrays.toString(arr));

a) [0, 2, 2, 6, 4]
b) [0, 2, 2, 6, 8]
c) [0, 4, 2, 8, 4]
d) [0, 2, 4, 6, 8]

Answer: a) [0, 2, 2, 6, 4]
Explanation: Elements at even indices retain their value, and elements at odd indices are doubled.
10. Which of the following statements about Java arrays is true?

a) The size of an array can be changed dynamically.
b) Arrays in Java are zero-based indexed.
c) Arrays can hold elements of different types.
d) Arrays in Java do not have a length property.

Answer: b) Arrays in Java are zero-based indexed.