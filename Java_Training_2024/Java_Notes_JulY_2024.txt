-> What is Java?
-> Where We can use Java?
-> Java History?
-> Java Terminologies 
	- JDK : tool kit for java development
	- JRE : provides runTime enviroment for programs
	- JVM : It will interpret the code and execute the bytecode
	- ByteCode : It is intermediate code generated by javac compiler, and It provides Platform independence
	- Garbage Collector(GC): It automatically manages memory allocations and deallocations. It will remove unused objects, reference.
	- ClassPath: Path where all libraries were found required for java program/application
-> Java Features
	- Simple, Secure, Robust , Platform Independent
	- OOP's, Multi Threading, Distributed, 
	- WORA(WriteOnceRunAnyWhere), Compile & Interpreted
	

-> JDK Installation 
=========================
1. Download the JDK from offical website https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html
2. Once Installation is completed, set the Path 
3. Open "system enviroment variables" 
	- Under User variables, Create 
		JAVA_HOME = C:\Program Files\Java\jdk-17 
	- Under System variables, Select Path variable, add following 
		C:\Program Files\Java\jdk-17\bin
		
4. Open CMD, run 
	java -version 
	javac -version 
	
## SAMPLE PROGRAM ###
- Always first statement must be comment or package
- Second statement can be importing 
- Next it will be class declaration
	- variables (instance / class, static )
	- method ( instance / class, static)
	- main() 

- java.lang is the default package, we can access all classes directly in our program.
- String[] args : Command Line Arguments. 
	- It will be useful whenever we want to provide inputs at the runtime to program
	syntax:
		String[] args 
		String []args 
		String... args // var args 

- We have 3 output methods 
	System.out.print() 
	System.out.println()
	System.out.printf() 

	
- How to Compile ?
	javac FileName.java ---> ByteCode (nonreadble) only JVM will understand
- How to Run? 
	java byteCode / DotClassName
- How to Read ByteCode?
	javap ByteCodeName or DotClassName
	

## QUESTIONS
1. Can we compile a java program without main() 
	Yes: we can compile a java program without main() 
2. Can we run a java program without main()
	No: Error: Main method not found in class
	- JavaFX application
	- Utility classes 
	- service classes 
	
3.Can we overload main() or not? 
	yes: it is always executing only psvm(String[] args) 
4.Can we run main() method with following signatures 
	public static int main(String[] args)  {}  - No bcoz of int return type
	public static void Main(String[] args) {} - No bcoz of Main (Capital M)
	public static void main(String... args) {} - Yes because of vars args syntax
	static public void main(String[] args) {} - Yes, order of access modifers and non-access modifiers, doesn't matter 

5.What other keywords we can use with main() apart from public and static?
	ans:  final synchronized strictfp
6.What should be javafilename, is it your class name always?
	ans: Yes [ if class is public , the filename and classname must be same] 
		if class is not public, filename and clasname can be different
		

7.What will be bytecode or .classname, will it depends on filename, class name?
	ans: .classname will be always same as class name in which main() is present.

8. Can we write more than one class in a single java file.


## QUESTIONS 
-----------------
1. What is ASCII and UNICODE and How Characters are stored in programming?
2. Diff compiler vs interpreter. 
3. What are various datatypes in JAVA. 

## EVERY DAY 
Solve 2-3 in hacker-rank of java. 





	
	

