Java introduction, History
================================
1.d) Java is a strongly typed, object-oriented programming language.
2.c) James Gosling
3.b) 1995
4.c) Multiple inheritance
5.c) Bytecode
6.b) Java Virtual Machine (JVM)
7.a) .java
8.c) Applets
9.a) Oracle
10.d) Java PE (Professional Edition)


Java Features & Comparisions with C, C++
============================================

1.a) Pointers – Java does not use pointers, unlike C and C++.
2. b) Reference – Arrays in Java are passed by reference, not by value.
3.a) Operator overloading – Java does not support operator overloading, unlike C and C++.
4.c) Java supports multiple inheritance using interfaces – Java allows multiple inheritance through interfaces but not through classes.
5.c) Bytecode – Java achieves platform independence by compiling to bytecode, which the JVM interprets.
6.b) final – The final keyword in Java prevents a class from being subclassed.
7.b) Better support for low-level programming – Java lacks low-level memory access capabilities compared to C and C++.
8.a) References – Java uses references instead of pointers for memory access.
9.b) Duplicate case values are allowed – Java disallows duplicate case values in switch statements.
20.d) Method overriding – Java uses method overriding to provide specific implementations in subclasses.

Data Types
==================
1.b) 8 bytes – The long data type in Java is 8 bytes in size. 

2.c) char ch = 'A'; – A char variable in Java is declared with single quotes. 

3.b) false – The default value of a boolean variable is false. 

4.a) float – The float data type is used for single-precision floating-point numbers. 

5.b) int[] arr = new int[5]; – This is a valid declaration of an integer array in Java. 

6.a) 2.5 – 5.0 / 2 results in 2.5 when assigned to a float. 

7.b) Character – Character is the wrapper class for the char data type. 

8.a) char – The char data type represents Unicode characters in Java. 

9.b) -32768 to 32767 – The short data type has this range in Java. 

10.b) String – String is not a primitive data type in Java. 

11.a) 2.5 – x / y results in 2.5 since y is a double. 

12.b) B – Adding 1 to char 'A' results in 'B'. 

13.b) -126 – Adding byte values exceeds the range and wraps around. 

14.a) Infinity – Dividing a float by zero results in Infinity. 

15.b) -2147483648 – The value exceeds the int range and wraps around. 

16.b) false – 0.7f and 0.1f * 7 do not yield the same floating-point result. 

17.a) -56 – b overflows and wraps around to -56. 

 
Java Tokens:
==================
1.b) _variable – Identifiers in Java must start with a letter, underscore, or dollar sign.
2.a) null – null is not a keyword in Java; it is a literal.
3.b) Hello /* World */ – The /* */ is a comment and does not affect the output.
4.d) There is no maximum length – Java does not impose a maximum length for identifiers.
5.b) 31 – The expression x+++y is parsed as x++ + y, which results in 10 + 20, and x is incremented to 11.
6.c) 30 – The result of _ + __ is 10 + 20, which equals 30.
7.b) It ensures precise floating-point calculations across different platforms 
	– The strictfp keyword enforces strict floating-point calculations.

Variables
===============
1.c) Compilation error at line 8 – The variable y is out of scope at line 8.
2.b) double 1stValue = 20.0; – Variable names cannot start with a digit.
3.a) 10 – The local variable x shadows the static variable x.
4.b) Throughout the method – Local variables are accessible only within the block they are defined in.
5.c) Compilation error – The expression x++ is not allowed with a final variable.
6.a) int var1; – This is a valid declaration of an instance variable.
7.a) 30 – The output is the sum of the static variable x and the local variable y.
8.d) They are shared among all instances of a class – Static variables are shared across all instances of a class.
9.b) 10 – The local variable x in the block shadows the static variable x.
10.c) final – The final keyword is used to declare constants in Java

Type Casting
=================
1.b) -24 – Casting 1000 to byte results in overflow, which maps to -24 due to two's complement representation.
2.a) 21 – 10.5 / 0.5 equals 21.0, and casting to int results in 21.
3.a) String s = (String) obj; – This is the correct way to cast an object to a String, provided obj is actually a String.
4.c) 30 – Casting 10.99 to int results in 10, and 10 * 3 equals 30.
5.d) Explicit type conversion – To convert a float to a long, explicit casting is required.
6.a) 65 – The char 'A' has a numeric value of 65 in Unicode.
7.c) Casting is required to convert an object to its superclass type – Casting is needed to convert an object to its superclass type.
8.a) 1 – 257 in byte results in 1 due to overflow.
9.a) instanceof – This operator can be used to check if an object is an instance of a specific class before casting.
10.b) 11 – Math.round(d) rounds 10.5 to the nearest integer, which is 11.

STRINGS 
--------------------
Which of the following methods is used to find the length of a string in Java?
a) length()
b) size()
c) getLength()
d) length

What will be the output of the following code?

java

String str = "Hello";
System.out.println(str.concat(" World"));

a) Hello
b) World
c) Hello World
d) HelloWorld

How can you check if a string starts with a specific prefix in Java?
a) startsWith()
b) beginsWith()
c) hasPrefix()
d) prefixOf()

Which method would you use to convert a string to lowercase in Java?
a) toLower()
b) lowerCase()
c) toLowerCase()
d) convertToLower()

What is the result of the following code?

java

String str = "Java Programming";
System.out.println(str.substring(5, 11));

a) Progra
b) Program
c) Progr
d) ogram

Which method is used to replace all occurrences of a specified character in a string?
a) replace()
b) replaceAll()
c) substitute()
d) change()

What will be the output of the following code?

java

String str1 = "hello";
String str2 = "hello";
System.out.println(str1 == str2);

a) true
b) false
c) Compilation error
d) Runtime error

How do you split a string into an array of substrings based on a delimiter in Java?
a) split()
b) divide()
c) tokenize()
d) cut()

Which method is used to trim leading and trailing whitespace from a string?
a) trim()
b) strip()
c) clean()
d) removeSpaces()

What does the equalsIgnoreCase() method do?
a) Compares two strings for equality, ignoring case
b) Compares two strings for equality, considering case
c) Checks if one string is a substring of another, ignoring case
d) Converts a string to lowercase and compares it to another string

1.a) length() – The length() method is used to find the length of a string.
2.c) Hello World – The concat() method combines "Hello" and " World" into "Hello World".
3.a) startsWith() – The startsWith() method checks if a string starts with a specified prefix.
4.c) toLowerCase() – The toLowerCase() method converts a string to lowercase.
5.c) Progr – The substring(5, 11) method extracts the substring from index 5 to 10.
6.a) replace() – The replace() method replaces all occurrences of a specified character or substring.
7.a) true – String literals with the same content are interned and refer to the same object, making str1 == str2 true.
8.a) split() – The split() method splits a string into an array of substrings based on a delimiter.
9.a) trim() – The trim() method removes leading and trailing whitespace from a string.
10.a) Compares two strings for equality, ignoring case – The equalsIgnoreCase() method compares two strings for equality, ignoring case differences.

